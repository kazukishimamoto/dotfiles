[core]
	editor = vim -c \"set fenc=utf-8\"
	excludesfile = /Users/kazuki.shimamoto/.gitignore_global
[user]
	name = Kazuki Shimamoto
	email = jakky0529@gmail.com
[color]
  status = auto
  diff = auto
  branch = auto
  interactive = auto
  grep = auto
  ui = auto
[pull]
	rebase = true
[alias]
	pl = pull
	ps = push
	psu = push -u origin HEAD
	rv = revert
	rb = rebase
	st = status --short --branch
	# reset
	r = reset --soft HEAD
	# rs= "!git ol | fzf --preview='echo {} | awk '\''{print \$1}'\'' | xargs git diff --color' | awk '\''{print $1}'\'' | xargs git reset"
	rs = "!git ol | fzf | awk '{print $1}' | xargs git reset"

	# stash
	s = stash
	su = stash -u
	sp = stash pop
	sl = stash list
	# add
	a = "!git diff --name-only | fzf --preview 'git diff --color {}' | xargs git add"
	aa = add -A
	ap = add -p
	# fetch
	fp = fetch --prune
	# branch
	b = branch
	ba = branch --all
	bd = "!git branch | tr -d ' ' | fzf --preview 'git show --color {}' | xargs git branch -D"
	# merge済みでmainブランチ以外のブランチを削除する
	vacuum = "!f () { git checkout $1; git branch --merged|egrep -v '\\*|main'|xargs git branch -d; git fetch --prune; };f"
	# diff
	d = diff
	db = "!git diff --name-only --diff-filter=d | xargs bat --diff"
	# ds = diff --stat
	ds = diff --staged
	# commit
	c = commit
	cm = commit -m
	# ca = commit --amend
	ca = commit -am
	# log
	l = log
	ol = log --oneline
	# switch
	sw = switch
	nb = switch -c
	ch = "!git branch | tr -d ' ' | fzf --preview 'git show --color {}' | xargs git switch"
	# restore
	discard = restore --patch
	# discard all = restore .
	unstaged = restore --staged --patch
	rsa = restore .
	usa = restore --staged .
	# merge
	m = merge
	# grep
	g = --line-number grep
	gu = grep --untracked --line-number
  # top(最上位ディレクトリに移動する)がほしい
	top = "!git branch"
[init]
	defaultBranch = main
	templatedir = ~/.git_template
